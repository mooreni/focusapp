---
globs: *.ts,*.tsx,*.js,*.jsx
description: Concise bullet-style code commenting standards
---

# Code Commenting Standards - Concise Style

## File Headers

Add a brief comment at the top of each file:

```typescript
/**
 * Camera feed component
 * - Displays webcam stream
 * - Handles permissions
 * - Passes frames to posture detector
 */
```

## Function Comments

Use bullet-point style doc comments:

```typescript
/**
 * Calculates slouch angle from landmarks
 * - Takes shoulder and spine coordinates
 * - Returns angle in degrees (0-90)
 * - Higher angle = worse posture
 */
function calculateSlouchAngle(shoulders, spine) {
  // Implementation...
}
```

## Inline Comments

Keep inline comments short and focused:

```typescript
// Check if slouching > 30 seconds before alerting (prevents false positives)
if (slouchDuration > SLOUCH_THRESHOLD) {
  triggerAlert();
}

// IPC: allows UI to talk to Electron main process
ipcRenderer.send('start-camera');
```

## State Variables

One-line explanation of purpose:

```typescript
// Tracks if camera is active (for privacy indicator)
const [isCameraActive, setIsCameraActive] = useState(false);

// Last alert time (for throttling)
const [lastAlertTime, setLastAlertTime] = useState<number | null>(null);
```

## Constants

Inline comments for magic numbers:

```typescript
const DEFAULT_WORK_DURATION = 25 * 60 * 1000; // 25 minutes in milliseconds
const ALERT_COOLDOWN = 5 * 60 * 1000; // 5 min cooldown between alerts
```

## Type Definitions

Bullet-point explanations:

```typescript
/**
 * Detected posture issue
 * - type: Issue category (slouching, looking-away, etc)
 * - severity: 1-10 scale
 * - duration: Seconds issue has persisted
 */
interface PostureAlert {
  type: 'slouching' | 'looking-away' | 'phone-usage' | 'absent';
  severity: number;
  duration: number;
  timestamp: number;
}
```

## Guidelines
- Keep comments short and bullet-style
- Explain WHY when not obvious
- One-line comments for most things
- Focus on purpose, not obvious details
